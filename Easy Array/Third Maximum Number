class Solution:
    def thirdMax(self, nums: List[int]) -> int:
        nums = list(set(nums))  # Remove duplicates to get distinct elements
        nums.sort(reverse=True)  # Sort in descending order

        if len(nums) >= 3:
            return nums[2]  # Third maximum
        else:
            return nums[0]
            

------------------------------------------------------------------------------------------------------------------------------------

#2 without using built in:
class Solution:
    def thirdMax(self, nums: List[int]) -> int:
        first=second=third=None
        for num in nums:
            if num==first or num==second or num==third:
                continue
            if first is None or num>first:
                third=second
                second=first
                first=num

            elif second is None or num>second:
                third=second
                second=num

            elif third is None or num>third:
                third=num

        if third is not None:
            return third
        else:
            return first
    
